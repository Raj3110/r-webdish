// orignal code     
     
     
       <div className="flex flex-col w-full md:w-5/6 mx-auto min-h-[calc(100dvh-56px)] items-center justify-center px-2">
        <img src="/assets/CompanyLogo.png" alt="" className="w-36 h-36" />
        <Typewriter text="Chef Intelligence" delay={200} />
        <p
          className={`${colors.textParagraph} text-base lg:text-lg  mt-4 mb-0 text-center font-semibold max-w-2xl`}
        >
          Elevate your culinary skills with the power of AI. Search for
          ingredients and equipment effortlessly to create masterful dishes.
        </p>
        <p
          className={`${colors.textParagraph} text-lg mb-12 lg:mb-4 text-center hidden lg:block font-semibold`}
        >
          Start your culinary adventure today with AI Chef Master!
        </p>

        <div
          className={`${colors.backgroundOfDiv} max-w-[690px] w-full shadow-xl rounded-xl p-3 justify-center lg:mt-2 mt-12`}
        >
          <p className="w-full font-semibold text-2xl text-center">
            Ingredients
          </p>
          {ingredientData.map((row, index) => (
            <div key={index} className="gap-2 mb-2">
              <div className="flex-col flex gap-3 lg:flex-row mt-4">
                <input
                  className={`flex p-2 border border-gray-300 rounded placeholder-gray-400 focus:outline-none focus:border-yellow-500 ${colors.inputBackground} ${colors.inputText}`}
                  type="text"
                  placeholder="Name"
                  name="ingredient"
                  value={row.ingredient}
                  onChange={(event) => handleInputChange(index, event)}
                  required
                />
                <input
                  className={`flex p-2 border border-gray-300 rounded placeholder-gray-400 focus:outline-none focus:border-yellow-500 ${colors.inputBackground} ${colors.inputText}`}
                  type="number"
                  placeholder="Quantity"
                  name="quantity"
                  value={row.quantity}
                  onChange={(event) => handleInputChange(index, event)}
                  required
                />
                <select
                  placeholder="Quantity"
                  name="unit"
                  value={row.unit}
                  onChange={(event) => handleInputChange(index, event)}
                  className={`bg-transparent md:w-32 flex p-2 border border-gray-300  rounded placeholder-gray-400 focus:outline-none focus:border-yellow-500 ${colors.inputBackground} ${colors.inputText}`}
                >
                  <option value="">Select Unit</option>
                  <option value="gram">gram</option>
                  <option value="mL">mL</option>
                  <option value="teaspoon">teaspoon</option>
                  <option value="tablespoon">tablespoon</option>
                  <option value="whole">piece</option>
                </select>
              </div>
            </div>
          ))}

          <div className="flex justify-center gap-2 mt-4 lg:mt-6 items-center align-middle">
            <button
              onClick={handleAddIngredient}
              className={`py-2 px-4 ${colors.buttonBackground} ${colors.buttonHoverBackground} ${colors.buttonTextColor} ${colors.buttonHoverTextColor} font-bold rounded focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50`}
            >
              Add More
            </button>
          </div>
        </div>

        <div
          className={`${colors.backgroundOfDiv} max-w-[690px] w-full shadow-xl rounded-xl p-3 justify-center mt-8`}
        >
          <p className="w-full font-semibold text-2xl text-center">
            Equipments
          </p>
          <div className="mt-[20px] w-full flex items-center gap-4">
            <input
              name="equipments"
              onChange={(e) => {
                if (!userData) return toast.error("Please login to proceed!");
                setNewEquipment(e.target.value);
              }}
              placeholder="eg. Oven"
              className={`${colors.inputBackground} ${colors.inputText} flex-1 border border-gray-300 px-2 py-1 placeholder:italic text-lg rounded-md placeholder:text-gray-400 outline-none focus:border-orange-400`}
              value={newEquipment}
            />
            <button onClick={handleAddEquipment} type="button" className="">
              <IoIosAdd className="text-green-500 text-3xl rounded-full border border-green-600 hover:bg-green-200" />
            </button>
          </div>
          <ul className="flex flex-wrap gap-2 my-2 w-full">
            {equipmentData.map((equipment, index) => (
              <li
                key={index}
                className="bg-amber-300 font-medium flex flex-row rounded-md items-center gap-2 px-2 py-1"
              >
                <span>{equipment}</span>
                <IoIosClose
                  onClick={() => {
                    const updatedEquipmentData = equipmentData.filter(
                      (_, i) => i !== index
                    );
                    setEquipmentData(updatedEquipmentData);
                  }}
                  className="text-xl cursor-pointer border border-black hover:bg-amber-500 rounded-full"
                />
              </li>
            ))}
          </ul>
        </div>

        <div className="mt-12 mb-4 flex gap-4 items-center">
          <button
            onClick={() => {
              document.body.style.overflow = "hidden";
              setOpenOverview(true);
            }}
            className={`${colors.overviewButton} ${colors.buttonHoverBackground} ${colors.buttonTextColor} ${colors.buttonHoverTextColor} w-fit mx-auto text-white font-bold py-3 px-4 rounded-xl focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50 ${colors.buttonHoverTextColor}`}
          >
            Overview
          </button>
          <button
            onClick={handleStartProcess}
            className={`${colors.button} ${colors.buttonHoverBackground} ${colors.buttonTextColor} ${colors.buttonHoverTextColor} w-fit mx-auto text-white font-bold py-3 px-4 rounded-xl focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-opacity-50 ${colors.buttonHoverTextColor}`}
          >
            Start To Process
          </button>
        </div>
      </div> 



-------------------------------------------------------------------
//stage 1

<div className="flex flex-col items-center justify-center h-screen w-full bg-[#FFF9E6]">
        <br /> <br /> <br />
        <div className="w-full max-w-4xl bg-white rounded-lg shadow-lg p-8">
          <h1 className="text-3xl font-bold text-[#FF7F00] mb-8">
            Chef Intelligence
          </h1>
          <p className="text-lg text-[#003D4C] mb-8">
            Elevate your culinary skills with the power of AI. Search for
            ingredients and equipment effortlessly to create masterful dishes.
            Start your culinary adventure today with AI Chef Master!
          </p>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="bg-[#F3F3F3] rounded-lg p-6 cursor-pointer hover:bg-[#E6E6E6] transition-colors">
              <img
                src="https://www.licious.in/blog/wp-content/uploads/2020/12/Tandoori-Chicken.jpg"
                alt="Image"
                className="w-full h-2/3 mx-auto mb-4"
              />
              <h2 className="text-lg font-medium text-[#003D4C]">Name</h2>
              {/* input here */}
            </div>

            <div className="bg-[#F3F3F3] rounded-lg p-6 cursor-pointer hover:bg-[#E6E6E6] transition-colors">
              <img
                src="https://www.licious.in/blog/wp-content/uploads/2020/12/Tandoori-Chicken.jpg"
                alt="Image"
                className="w-full h-2/3 mx-auto mb-4"
              />
              <h2 className="text-lg font-medium text-[#003D4C]">Quantity</h2>
               {/* input here */}
            </div>

            <div className="bg-[#F3F3F3] rounded-lg p-6 cursor-pointer hover:bg-[#E6E6E6] transition-colors">
              <img
                src="https://www.licious.in/blog/wp-content/uploads/2020/12/Tandoori-Chicken.jpg"
                alt="Image"
                className="w-full h-2/3 mx-auto mb-4"
              />
              <h2 className="text-lg font-medium text-[#003D4C]">Unit</h2>
              {/* input here */}
            </div>
          </div>

          <br />

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="bg-[#F3F3F3] rounded-lg p-6 cursor-pointer hover:bg-[#E6E6E6] transition-colors">
              <h2 className="text-lg font-medium text-[#003D4C]">Equipments</h2>
              {/* input here */}
            </div>

            <div className="bg-[#F3F3F3] rounded-lg p-6 cursor-pointer hover:bg-[#E6E6E6] transition-colors">
              <h2 className="text-lg font-medium text-[#003D4C]">Unit</h2>
              {/* input here */}
            </div>
          </div>

          <div className="mt-8">
            <button className="bg-[#FF7F00] hover:bg-[#E06E00] text-white font-medium py-2 px-4 rounded-lg mt-4">
              overview
            </button>{" "}
            <button className="bg-[#003D4C] hover:bg-[#E06E00] text-white font-medium py-2 px-4 rounded-lg mt-4">
              Start to Process
            </button>
          </div>
        </div>
      </div>



---------------------------------------------------------------------
